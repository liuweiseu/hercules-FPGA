A51 MACRO ASSEMBLER  STARTUP_M5                                                           09/19/2019 17:11:12 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\STARTUP_M5.obj
ASSEMBLER INVOKED BY: d:\Keil_v5\C51\BIN\A51.EXE STARTUP_M5.A51 SET(LARGE) DEBUG PRINT(.\Listings\STARTUP_M5.lst) OBJECT
                      (.\Objects\STARTUP_M5.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;------------------------------------------------------------------------------
                       3     ;  This file is part of the C51 Compiler package
                       4     ;  Startup Code for the Capital Micro AS1E5 device
                       5     ;  Copyright (c) 2001-2005 Keil Elektronik GmbH and Keil Software, Inc.
                       6     ;  Version 1.00
                       7     ;
                       8     ;  *** <<< Use Configuration Wizard in Context Menu >>> ***
                       9     ;------------------------------------------------------------------------------
                      10     ;  STARTUP_AS1E5.A51:  This code is executed after processor reset.
                      11     ;
                      12     ;  To translate this file use A51 with the following invocation:
                      13     ;
                      14     ;     A51 STARTUP_CME3000.A51
                      15     ;
                      16     ;  To link the modified STARTUP_CME3000.OBJ file to your application use the following
                      17     ;  Lx51 invocation:
                      18     ;
                      19     ;     Lx51 your object file list, STARTUP_CME3000.OBJ  controls
                      20     ;
                      21     ;------------------------------------------------------------------------------
                      22     ;
                      23     ;  User-defined <h> Power-On Initialization of Memory
                      24     ;
                      25     ;  With the following EQU statements the initialization of memory
                      26     ;  at processor reset can be defined:
                      27     ;
                      28     ; <o> IDATALEN: IDATA memory size <0x0-0x100>
                      29     ;     <i> Note: The absolute start-address of IDATA memory is always 0
                      30     ;     <i>       The IDATA space overlaps physically the DATA and BIT areas.
  0100                31     IDATALEN        EQU     100H
                      32     ;
                      33     ; <o> XDATASTART: XDATA memory start address <0x0-0xFFFF> 
                      34     ;     <i> The absolute start address of XDATA memory
  0000                35     XDATASTART      EQU     0     
                      36     ;
                      37     ; <o> XDATALEN: XDATA memory size <0x0-0xFFFF> 
                      38     ;     <i> The length of XDATA memory in bytes.
  0000                39     XDATALEN        EQU     0      
                      40     ;
                      41     ; <o> PDATASTART: PDATA memory start address <0x0-0xFFFF> 
                      42     ;     <i> The absolute start address of PDATA memory
  0000                43     PDATASTART      EQU     0H
                      44     ;
                      45     ; <o> PDATALEN: PDATA memory size <0x0-0xFF> 
                      46     ;     <i> The length of PDATA memory in bytes.
  0000                47     PDATALEN        EQU     0H
                      48     ;
                      49     ;</h>
                      50     ;------------------------------------------------------------------------------
                      51     ;
                      52     ;<h> Reentrant Stack Initialization
                      53     ;
                      54     ;  The following EQU statements define the stack pointer for reentrant
                      55     ;  functions and initialized it:
                      56     ;
                      57     ; <h> Stack Space for reentrant functions in the SMALL model.
A51 MACRO ASSEMBLER  STARTUP_M5                                                           09/19/2019 17:11:12 PAGE     2

                      58     ;  <q> IBPSTACK: Enable SMALL model reentrant stack
                      59     ;     <i> Stack space for reentrant functions in the SMALL model.
  0000                60     IBPSTACK        EQU     0       ; set to 1 if small reentrant is used.
                      61     ;  <o> IBPSTACKTOP: End address of SMALL model stack <0x0-0xFF>
                      62     ;     <i> Set the top of the stack to the highest location.
  0100                63     IBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                      64     ; </h>
                      65     ;
                      66     ; <h> Stack Space for reentrant functions in the LARGE model.      
                      67     ;  <q> XBPSTACK: Enable LARGE model reentrant stack
                      68     ;     <i> Stack space for reentrant functions in the LARGE model.
  0000                69     XBPSTACK        EQU     0       ; set to 1 if large reentrant is used.
                      70     ;  <o> XBPSTACKTOP: End address of LARGE model stack <0x0-0xFFFF>
                      71     ;     <i> Set the top of the stack to the highest location.
  0000                72     XBPSTACKTOP     EQU     0xFFFF +1   ; default 0FFFFH+1 
                      73     ; </h>
                      74     ;
                      75     ; <h> Stack Space for reentrant functions in the COMPACT model.    
                      76     ;  <q> PBPSTACK: Enable COMPACT model reentrant stack
                      77     ;     <i> Stack space for reentrant functions in the COMPACT model.
  0000                78     PBPSTACK        EQU     0       ; set to 1 if compact reentrant is used.
                      79     ;
                      80     ;   <o> PBPSTACKTOP: End address of COMPACT model stack <0x0-0xFFFF>
                      81     ;     <i> Set the top of the stack to the highest location.
  0100                82     PBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                      83     ; </h>
                      84     ;</h>
                      85     ;------------------------------------------------------------------------------
                      86     ;
                      87     ;  Memory Page for Using the Compact Model with 64 KByte xdata RAM
                      88     ;  <e>Compact Model Page Definition
                      89     ;
                      90     ;  <i>Define the XDATA page used for PDATA variables. 
                      91     ;  <i>PPAGE must conform with the PPAGE set in the linker invocation.
                      92     ;
                      93     ; Enable pdata memory page initalization
  0000                94     PPAGEENABLE     EQU     0       ; set to 1 if pdata object are used.
                      95     ;
                      96     ; <o> PPAGE number <0x0-0xFF> 
                      97     ; <i> uppermost 256-byte address of the page used for PDATA variables.
  0000                98     PPAGE           EQU     0
                      99     ;
                     100     ; <o> SFR address which supplies uppermost address byte <0x0-0xFF> 
                     101     ; <i> most 8051 variants use P2 as uppermost address byte
  00A0               102     PPAGE_SFR       DATA    0A0H
                     103     ;
                     104     ; </e>
                     105     ;------------------------------------------------------------------------------
                     106     
                     107     ; Standard SFR Symbols 
  00E0               108     ACC     DATA    0E0H
  00F0               109     B       DATA    0F0H
  0081               110     SP      DATA    81H
  0082               111     DPL     DATA    82H
  0083               112     DPH     DATA    83H
                     113     
                     114                     NAME    ?C_STARTUP
                     115     
                     116     
                     117     ?C_C51STARTUP   SEGMENT   CODE
                     118     ?STACK          SEGMENT   IDATA
                     119     
----                 120                     RSEG    ?STACK
0000                 121                     DS      1
                     122     
                     123                     EXTRN CODE (?C_START)
A51 MACRO ASSEMBLER  STARTUP_M5                                                           09/19/2019 17:11:12 PAGE     3

                     124                     PUBLIC  ?C_STARTUP
                     125     
----                 126                     CSEG    AT      0
0000 020000   F      127     ?C_STARTUP:     LJMP    STARTUP1
                     128     
----                 129                     RSEG    ?C_C51STARTUP
                     130     
0000                 131     STARTUP1:
                     132     
                     133     IF IDATALEN <> 0
0000 78FF            134                     MOV     R0,#IDATALEN - 1
0002 E4              135                     CLR     A
0003 F6              136     IDATALOOP:      MOV     @R0,A
0004 D8FD            137                     DJNZ    R0,IDATALOOP
                     138     ENDIF
                     139     
                     140     IF XDATALEN <> 0
                                             MOV     DPTR,#XDATASTART
                                             MOV     R7,#LOW (XDATALEN)
                               IF (LOW (XDATALEN)) <> 0
                                             MOV     R6,#(HIGH (XDATALEN)) +1
                               ELSE
                                             MOV     R6,#HIGH (XDATALEN)
                               ENDIF
                                             CLR     A
                             XDATALOOP:      MOVX    @DPTR,A
                                             INC     DPTR
                                             DJNZ    R7,XDATALOOP
                                             DJNZ    R6,XDATALOOP
                             ENDIF
                     154     
                     155     IF PPAGEENABLE <> 0
                                             MOV     PPAGE_SFR,#PPAGE
                             ENDIF
                     158     
                     159     IF PDATALEN <> 0
                                             MOV     R0,#LOW (PDATASTART)
                                             MOV     R7,#LOW (PDATALEN)
                                             CLR     A
                             PDATALOOP:      MOVX    @R0,A
                                             INC     R0
                                             DJNZ    R7,PDATALOOP
                             ENDIF
                     167     
                     168     IF IBPSTACK <> 0
                             EXTRN DATA (?C_IBP)
                             
                                             MOV     ?C_IBP,#LOW IBPSTACKTOP
                             ENDIF
                     173     
                     174     IF XBPSTACK <> 0
                             EXTRN DATA (?C_XBP)
                             
                                             MOV     ?C_XBP,#HIGH XBPSTACKTOP
                                             MOV     ?C_XBP+1,#LOW XBPSTACKTOP
                             ENDIF
                     180     
                     181     IF PBPSTACK <> 0
                             EXTRN DATA (?C_PBP)
                                             MOV     ?C_PBP,#LOW PBPSTACKTOP
                             ENDIF
                     185     
0006 758100   F      186                     MOV     SP,#?STACK-1
                     187     
                     188     ; This code is required if you use L51_BANK.A51 with Banking Mode 4
                     189     ;<h> Code Banking
A51 MACRO ASSEMBLER  STARTUP_M5                                                           09/19/2019 17:11:12 PAGE     4

                     190     ; <q> Select Bank 0 for L51_BANK.A51 Mode 4
                     191     
                             
                             
                                             
                             
                     196     ;</h>
0009 020000   F      197                     LJMP    ?C_START
                     198     
                     199                     END
A51 MACRO ASSEMBLER  STARTUP_M5                                                           09/19/2019 17:11:12 PAGE     5

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

?C_C51STARTUP. . .  C SEG    000CH       REL=UNIT
?C_START . . . . .  C ADDR   -----       EXT
?C_STARTUP . . . .  C ADDR   0000H   A   
?STACK . . . . . .  I SEG    0001H       REL=UNIT
ACC. . . . . . . .  D ADDR   00E0H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
IBPSTACK . . . . .  N NUMB   0000H   A   
IBPSTACKTOP. . . .  N NUMB   0100H   A   
IDATALEN . . . . .  N NUMB   0100H   A   
IDATALOOP. . . . .  C ADDR   0003H   R   SEG=?C_C51STARTUP
PBPSTACK . . . . .  N NUMB   0000H   A   
PBPSTACKTOP. . . .  N NUMB   0100H   A   
PDATALEN . . . . .  N NUMB   0000H   A   
PDATASTART . . . .  N NUMB   0000H   A   
PPAGE. . . . . . .  N NUMB   0000H   A   
PPAGEENABLE. . . .  N NUMB   0000H   A   
PPAGE_SFR. . . . .  D ADDR   00A0H   A   
SP . . . . . . . .  D ADDR   0081H   A   
STARTUP1 . . . . .  C ADDR   0000H   R   SEG=?C_C51STARTUP
XBPSTACK . . . . .  N NUMB   0000H   A   
XBPSTACKTOP. . . .  N NUMB   0000H   A   
XDATALEN . . . . .  N NUMB   0000H   A   
XDATASTART . . . .  N NUMB   0000H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
